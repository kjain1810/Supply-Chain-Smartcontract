const [isManufacturer, setIsManufacturer] = useState(false);
const [isSupplier, setIsSupplier] = useState(false);
<button
        onClick={async ()=>{
          blockchain.contract.methods.addSupplier(1, 50, blockchain.userAccount, 1).send(
            {from: blockchain.userAccount}
          )
        }}
      >
        Assign me Supplier
      </button>
      <h1>Hi</h1>
      <button
      onClick={async ()=>{
        const youFucker = await blockchain.contract.methods.isManufacturer().call(
          {from : blockchain.userAccount}
        )
        console.log(youFucker);
        setIsManufacturer(youFucker);
      }}
      >
        Am I manufacturer
      </button>
      <h1>I am {isManufacturer ? "true" : "false"}</h1>
      <button
            onClick={async ()=>{
              const fucker = await blockchain.contract.methods.isSupplier().call(
                {from : blockchain.userAccount}
              )
              console.log(fucker);
              setIsSupplier(fucker);
            }}
      
      >
        Am I Supplier
      </button>
      <h1>I am {isSupplier ? "true": "false"}</h1>